# GitHub Actions 工作流程名称
name: Android CI Build Release

# 触发工作流程的事件
on:
  push:
    branches: [ "main" ] # 当代码推送到 main 分支时触发
  pull_request:
    branches: [ "main" ] # 当有新的拉取请求到 main 分支时触发

# 定义工作流程中的任务
jobs:
  build:
    # 指定运行此任务的操作系统
    runs-on: ubuntu-latest

    # 定义任务中的步骤
    steps:
      # 第一步：检出您的代码仓库
      # 这一步会自动将 keystore 目录和其中的文件下载下来
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：设置 Java 开发环境 (JDK)
      # 您的 build.gradle.kts 文件中指定了 Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin' # 使用 Eclipse Temurin 发行版
          cache: gradle # 缓存 Gradle 依赖项以加快构建速度

      # 第三步：设置 Gradle 可执行权限
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 第四步：使用 Gradle 构建 release 版本的 APK
      # 调用 assembleRelease 任务。根据您的构建脚本，它会使用 debug 签名
      - name: Build Release APK with Gradle
        run: ./gradlew assembleRelease

      # 第五步：上传构建产物 (APK)
      # 构建成功后，将生成的发行版 APK 文件作为工作流程的产物上传
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release # 上传产物的名称
          path: app/build/outputs/apk/release/app-release.apk # 发行版 APK 的路径
